#pragma once

// Abuse the upper half of the ascii range to indicate
// shifted characters

#define SHIFT 0x80
#define NO_KEY 0x00
static const uint8_t _asciimap[] PROGMEM = {
    NO_KEY,           // NUL
    NO_KEY,           // SOH
    NO_KEY,           // STX
    NO_KEY,           // ETX
    NO_KEY,           // EOT
    NO_KEY,           // ENQ
    NO_KEY,           // ACK
    NO_KEY,           // BEL
    KEY_BACKSPACE,          // BS   Backspace
    KEY_TAB,                // TAB  Tab
    KEY_ENTER,              // LF   Enter
    NO_KEY,           // VT
    NO_KEY,           // FF
    NO_KEY,           // CR
    NO_KEY,           // SO
    NO_KEY,           // SI
    NO_KEY,           // DEL
    NO_KEY,           // DC1
    NO_KEY,           // DC2
    NO_KEY,           // DC3
    NO_KEY,           // DC4
    NO_KEY,           // NAK
    NO_KEY,           // SYN
    NO_KEY,           // ETB
    NO_KEY,           // CAN
    NO_KEY,           // EM
    NO_KEY,           // SUB
    NO_KEY,           // ESC
    NO_KEY,           // FS
    NO_KEY,           // GS
    NO_KEY,           // RS
    NO_KEY,           // US

    KEY_SPACE,              // ' ' Space
    KEY_1|SHIFT,            // !
    KEY_QUOTE|SHIFT,        // "
    KEY_3|SHIFT,            // #
    KEY_4|SHIFT,            // $
    KEY_5|SHIFT,            // %
    KEY_7|SHIFT,            // &
    KEY_QUOTE,              // '
    KEY_9|SHIFT,            // (
    KEY_0|SHIFT,            // )
    KEY_8|SHIFT,            // *
    KEY_EQUALS|SHIFT,        // +
    KEY_COMMA,              // ,
    KEY_MINUS,              // -
    KEY_PERIOD,             // .
    KEY_SLASH,              // /
    KEY_0,                  // 0
    KEY_1,                  // 1
    KEY_2,                  // 2
    KEY_3,                  // 3
    KEY_4,                  // 4
    KEY_5,                  // 5
    KEY_6,                  // 6
    KEY_7,                  // 7
    KEY_8,                  // 8
    KEY_9,                  // 9
    KEY_SEMICOLON|SHIFT,    // :
    KEY_SEMICOLON,          // ;
    KEY_COMMA|SHIFT,        // <
    KEY_EQUALS,              // =
    KEY_PERIOD|SHIFT,       // >
    KEY_SLASH|SHIFT,        // ?
    KEY_2|SHIFT,            // @
    KEY_A|SHIFT,            // A
    KEY_B|SHIFT,            // B
    KEY_C|SHIFT,            // C
    KEY_D|SHIFT,            // D
    KEY_E|SHIFT,            // E
    KEY_F|SHIFT,            // F
    KEY_G|SHIFT,            // G
    KEY_H|SHIFT,            // H
    KEY_I|SHIFT,            // I
    KEY_J|SHIFT,            // J
    KEY_K|SHIFT,            // K
    KEY_L|SHIFT,            // L
    KEY_M|SHIFT,            // M
    KEY_N|SHIFT,            // N
    KEY_O|SHIFT,            // O
    KEY_P|SHIFT,            // P
    KEY_Q|SHIFT,            // Q
    KEY_R|SHIFT,            // R
    KEY_S|SHIFT,            // S
    KEY_T|SHIFT,            // T
    KEY_U|SHIFT,            // U
    KEY_V|SHIFT,            // V
    KEY_W|SHIFT,            // W
    KEY_X|SHIFT,            // X
    KEY_Y|SHIFT,            // Y
    KEY_Z|SHIFT,            // Z
    KEY_L_BRACKET,         // [
    KEY_BACKSLASH,          // bslash
    KEY_R_BRACKET,        // ]
    KEY_6|SHIFT,            // ^
    KEY_MINUS|SHIFT,        // _
    KEY_GRAVE,              // `
    KEY_A,                  // a
    KEY_B,                  // b
    KEY_C,                  // c
    KEY_D,                  // d
    KEY_E,                  // e
    KEY_F,                  // f
    KEY_G,                  // g
    KEY_H,                  // h
    KEY_I,                  // i
    KEY_J,                  // j
    KEY_K,                  // k
    KEY_L,                  // l
    KEY_M,                  // m
    KEY_N,                  // n
    KEY_O,                  // o
    KEY_P,                  // p
    KEY_Q,                  // q
    KEY_R,                  // r
    KEY_S,                  // s
    KEY_T,                  // t
    KEY_U,                  // u
    KEY_V,                  // v
    KEY_W,                  // w
    KEY_X,                  // x
    KEY_Y,                  // y
    KEY_Z,                  // z
    KEY_L_BRACKET|SHIFT,   // {
    KEY_BACKSLASH|SHIFT,    // |
    KEY_R_BRACKET|SHIFT,  // }
    KEY_GRAVE|SHIFT,        // ~
    NO_KEY            // DEL
};
